fix Lintian info hypen-used-as-minus-sign
--- a/dkms.8
+++ b/dkms.8
@@ -14,7 +14,7 @@ for each kernel on your system in a simp
 .B add
 Adds a module/version combination to the tree for builds and installs.
 Requires source in
-.I /usr/src/<module>-<module-version>/
+.I /usr/src/<module>\-<module\-version>/
 as well as a properly
 formatted
 .I dkms.conf
@@ -24,14 +24,14 @@ file.
 Removes a module/version or module/version/kernel combination from the
 tree.  If the modules is currently installed, it first uninstalls it
 and if applicable, will replace it with its original_module.  Use the
-.B --all
+.B \-\-all
 option in order to remove all instances for every kernel at once.
 .TP
 .B build
 Builds the specified module/version combo for the specified kernel. If
 no kernel is specified it builds for the currently running kernel.  All builds
 occur in the directory
-.I /var/lib/dkms/<module>/<module-version>/build/.
+.I /var/lib/dkms/<module>/<module\-version>/build/.
 .TP
 .B install
 Installs a built module/version combo onto the kernel it was built for. If
@@ -61,15 +61,15 @@ subdirectory of your module source direc
 must specify the distro while using this action.  Driver disks can be made
 for single kernels or can be made to support multiple kernels.  To create
 a driver disk image with modules for multiple kernels, just specify multiple
--k parameters on the command line (-k kernel1 -k kernel2 -a arch1 -a arch2).
+\-k parameters on the command line (\-k kernel1 \-k kernel2 \-a arch1 \-a arch2).
 
 Red Hat began supporting multi-arched driver disks in RHEL3.  To force creation
 of a driver disk with arch information, specify
-.B -d redhat2
+.B \-d redhat2
 or if you specify multiple architectures on the command-line and use
-.B -d redhat
+.B \-d redhat
 , DKMS will create a version 2 driver disk.  By specifying
-.B -d redhat1
+.B \-d redhat1
 , you can force a version 1 driver disk image.
 
 Note that redhat1 driver disks actually supported multiple architectures when
@@ -87,21 +87,21 @@ or higher to generate a proper driver di
 
 For suse/UnitedLinux driver disks, /usr/share/YaST2/modules/Vendor.ycp
 will also be copied to the driver disk; no other files are needed.
-However, for these distros, you must specify a -r release. For
-SuSE 9.1, it would be -d suse -r 9.1. For SLES9, it would be -d suse -r sles9.
+However, for these distros, you must specify a \-r release. For
+SuSE 9.1, it would be \-d suse \-r 9.1. For SLES9, it would be \-d suse \-r sles9.
 
 By default the disk image it creates is 1440 (k) in size.  This can be
 overridden by specifying a different
-.B --size ####
+.B \-\-size ####
 which should should be given as a number in kilobytes divisible by 20.
 
 You may have more content than will fit on a floppy.  Therefore, DKMS
 can now generate image files of different types.
-.B --media=floppy (default)
+.B \-\-media=floppy (default)
 to generate a floppy disk image, or
-.B --media=iso
+.B \-\-media=iso
 to generate a CD-ROM ISO file, or
-.B --media=tar
+.B \-\-media=tar
 to generate a tar file.
 
 You may copy the floppy or ISO image file to a USB key to be used with
@@ -115,13 +115,13 @@ in the DKMS tree for that module/version
 the source and any built modules for kernels in the tree (as specified).
 Otherwise, you can specify
 a singular kernel to archive only, or multiple kernels to archive
-(-k kernel1 -k kernel2 -a arch1 -a arch2).  Optionally, you can use
-.B --archive
+(\-k kernel1 \-k kernel2 \-a arch1 \-a arch2).  Optionally, you can use
+.B \-\-archive
 to specify the name (with no preceding path) that you would like this
 tarball to have.  You can also specify
-.B --binaries-only
+.B \-\-binaries\-only
 if you want the resultant tarball not to include the module source.  Likewise,
-.B --source-only
+.B \-\-source-only
 can be used to specify that no prebuilt binaries should be included in the tarball.
 In general,
 .B mktarball
@@ -135,7 +135,7 @@ without having to wait for anything to c
 This takes a tarball made from the
 .B mktarball
 command and specified with the
-.B --archive
+.B \-\-archive
 option and loads it into your DKMS tree.  This will leave any
 newly added modules in the built state and
 .B dkms install
@@ -143,33 +143,33 @@ should then be called to install any of 
 exist where
 .B ldtarball
 is attempting to place them, it will warn and not copy over them.  The
-.B --force
+.B \-\-force
 option should be used to override this.
 .TP
 .B mkrpm
 This action allows you to create an RPM package for a specified module / version.
 It uses a template .spec file found in
-.I /etc/dkms/template-dkms-mkrpm.spec
+.I /etc/dkms/template\-dkms\-mkrpm.spec
 as the basis for the RPM.  Alternatively, if DKMS finds a file called
-.I /usr/src/<module>-<module-version>/<module>-dkms-mkrpm.spec
+.I /usr/src/<module>\-<module\-version>/<module>\-dkms\-mkrpm.spec
 it will use that .spec file instead.  In general, a DKMS tarball is placed inside
 the contents of this RPM, and the RPM itself calls various DKMS commands to
 load this tarball, build and install modules on the end user's system.  If you do
 not want your RPM to contain any prebuilt binaries, be sure to specify
-.B --source-only
+.B \-\-source\-only
 in the mkrpm command.
 .TP
 .B mkdeb
 This action allows you to create a debian binary package for a specified module / version.
 It uses a template debian directory found in
-.I /etc/dkms/template-dkms-mkdeb
+.I /etc/dkms/template\-dkms\-mkdeb
 as the basis for the package. Alternatively, if DKMS finds a file called
-.I /usr/src/<module>-<module-version>/<module>-dkms-mkdeb
+.I /usr/src/<module>\-<module\-version>/<module>\-dkms\-mkdeb
 it will use that folder instead. In general, a DKMS tarball is placed inside the
 contents of this package, and the package itself calls various DKMS commands to
 load this tarball, build and install modules on the end user's system.  If you do
 not want your debian package to contain any prebuilt binaries, be sure to specify
-.B --source-only
+.B \-\-source\-only
 in the mkdeb command.
 .TP
 .B mkdsc
@@ -177,20 +177,20 @@ This action allows you to create a debia
 It will create a .tar.gz, and a .dsc.  All options supported by
 .B mkdeb
 are supported by it.  The main difference in it's usage is that it will look in
-.I /etc/dkms/template-dkms-mkdsc
+.I /etc/dkms/template\-dkms\-mkdsc
 as the basis for the package. Alternatively, if DKMS finds a file called
-.I /usr/src/<module>-<module-version>/<module>-dkms-mkdsc
+.I /usr/src/<module>\-<module\-version>/<module>\-dkms\-mkdsc
 it will use that folder instead. If you do not want your debian source package to
 contain any prebuilt binaries, be sure to specify
-.B --source-only
+.B \-\-source\-only
 in the mkdsc command.
 .TP
 .B mkkmp
 This action allows you to create an Kernel Module Package source RPM for a specified module / version.
 It uses the .spec file specified by
-.I --spec=specfile
+.I \-\-spec=specfile
 else
-.I $module-kmp.spec
+.I $module\-kmp.spec
 as the basis for the RPM.  The generated source RPM may then be built using SuSE's build.rpm or
 Fedora/RHEL's mock chroot environments.  See http://kerneldrivers.org/ for
 more details on KMPs.
@@ -202,46 +202,46 @@ Status can be shown for just a certain m
 a module/version combination or a module/version/kernel combination.
 .SH OPTIONS
 .TP
-.B -m <module>
+.B \-m <module>
 The name of the module.
 .TP
-.B -v <module-version>
+.B \-v <module\-version>
 The version of the module to execute the specified action upon.
 .TP
-.B -k <kernel-version>
+.B \-k <kernel\-version>
 The kernel to perform the action upon.  You can specify multiple kernel versions
-on the command line by repeating the -k argument with a different kernel name.
+on the command line by repeating the \-k argument with a different kernel name.
 However, not all actions support multiple kernel versions (it will error out
 in this case).
 .TP
-.B -a, --arch
+.B \-a, \-\-arch
 The system architecture to perform the action upon.  If not specified, it assumes
-the arch of the currently running system (`uname -m`).  You can specify multiple
-arch parameters on the same command line by repeating the -a argument with a
+the arch of the currently running system (`uname \-m`).  You can specify multiple
+arch parameters on the same command line by repeating the \-a argument with a
 different arch name.  When multiple architectures are specified, there must
-be a 1:1 relationship between -k arguments to -a arguments.  DKMS will then
-assume the first -a argument aligns with the first -k kernel and so on for the
+be a 1:1 relationship between \-k arguments to \-a arguments.  DKMS will then
+assume the first \-a argument aligns with the first \-k kernel and so on for the
 second, third, etc.
 
-For example, if you were to specify: -k kernel1 -k kernel2 -a i386 -k kernel3 -a i686 -a x86_64,
+For example, if you were to specify: \-k kernel1 \-k kernel2 \-a i386 \-k kernel3 \-a i686 \-a x86_64,
 DKMS would process this as: kernel1-i386, kernel2-i686, kernel3-x86_64.
 .TP
-.B -q, --quiet
+.B \-q, \-\-quiet
 Quiet.
 .TP
-.B -V, --version
+.B \-V, \-\-version
 Prints the currently installed version of dkms and exits.
 .TP
-.B -c <dkms.conf-location>
+.B \-c <dkms.conf\-location>
 The location of the
 .I dkms.conf
 file.  This is needed for the add action and if not specified,
 it is assumed to be located in
-.I /usr/src/<module>-<module-version>/.
+.I /usr/src/<module>\-<module\-version>/.
 See below for more information on the format of
 .I dkms.conf.
 .TP
-.B -d, --distro
+.B \-d, \-\-distro
 The distribution being used.  This is only currently needed for
 .B mkdriverdisk.
 The supported distros are
@@ -255,26 +255,26 @@ and
 .B mkkmp
 for more information.
 .TP
-.B -r, --release
+.B \-r, \-\-release
 The release being used.  This is only currently used for
 .B mkdriverdisk
-and is only used for suse or UnitedLinux distros (eg. -r 9.1).  It is
+and is only used for suse or UnitedLinux distros (eg. \-r 9.1).  It is
 used in the internal makeup of the driverdisk.
 .TP
-.B --size
+.B \-\-size
 The size of the driver disk image to be created.  By default, this value is set
 at 1440.  Any different size should be given as an integer value only, should
 be divisible by 20 and should represent the number of kilobytes of the image
 size you desire.
 .TP
-.B --config <kernel-.config-location>
+.B \-\-config <kernel\-.config\-location>
 During a
 .B build
 this option is used to specify an alternate location for the kernel .config
 file which was used to compile that kernel.  Normally,
 .B dkms
 uses the Red Hat standard location and config filenames located in
-.I /usr/src/linux-<kernel>/configs/.
+.I /usr/src/linux\-<kernel>/configs/.
 If the config for the kernel that you
 are building a module for is not located here or does not have the expected
 name in this location, you will need to tell
@@ -282,25 +282,25 @@ name in this location, you will need to 
 where the necessary .config can be found so that your kernel can be properly
 prepared for the module build.
 .TP
-.B --archive <tarball-location>
+.B \-\-archive <tarball\-location>
 This option is used during a
 .B ldtarball
 action to specify the location of the tarball you wish to load into
 your DKMS tree.
 .TP
-.B --templatekernel <kernel-version>
+.B \-\-templatekernel <kernel\-version>
 This option is required for the action:
 .B match.
 Match will look at the
 templatekernel specified and install all of the same module/version
 combinations on the other kernel.
 .TP
-.B --force
+.B \-\-force
 This option can be used in conjunction with
 .B ldtarball
 to force copying over of already existant files.
 .TP
-.B --binaries-only
+.B \-\-binaries\-only
 This option can be used in conjunction with
 .B mktarball
 in order to create a DKMS tarball which does not contain the source for the
@@ -312,7 +312,7 @@ have the module source in that systems D
 .B will refuse
 to load a binaries-only tarball.
 .TP
-.B --source-only
+.B \-\-source\-only
 This option can be used in conjunction with
 .B mktarball
 or
@@ -328,38 +328,38 @@ but do not want the RPM you create to ha
 passing this option will keep its internal DKMS tarball from containing any
 prebuilt modules.
 .TP
-.B --all
+.B \-\-all
 This option can be used to automatically specify all relevant kernels/arches
 for a module/module-version.  This is useful for things like
 .B remove
 ,
 .B mktarball
-, etc.  This saves the trouble of having to actually specify -k kernel1 -a
-arch1 -k kernel2 -a arch2 for every kernel you have built your module for.
+, etc.  This saves the trouble of having to actually specify \-k kernel1 \-a
+arch1 \-k kernel2 \-a arch2 for every kernel you have built your module for.
 .TP
-.B --no-prepare-kernel
+.B \-\-no\-prepare\-kernel
 This option keeps DKMS from first preparing your kernel before building
 a module for it.  Generally, this option should not be used so as to
 ensure that modules are compiled correctly.
 .TP
-.B --no-clean-kernel
+.B \-\-no\-clean\-kernel
 This option keeps DKMS from cleaning your kernel source tree after a
 build.
 .TP
-.B --kernelsourcedir <kernel-source-directory-location>
+.B \-\-kernelsourcedir <kernel\-source\-directory\-location>
 Using this option you can specify the location of your kernel source
 directory.  Most likely you will not need to set this if your kernel
 source is accessible via
 .I /lib/modules/$kernel_version/build.
 .TP
-.B --directive <"cli-directive=cli-value">
+.B \-\-directive <"cli\-directive=cli\-value">
 Using this option, you can specify additional directives from the command
 line.  The
-.B --directive
+.B \-\-directive
 option can be used multiple times on the same command-line to specify
 multiple additional command line directives.
 .TP
-.B --rpm_safe_upgrade
+.B \-\-rpm_safe_upgrade
 This flag should be used when packaging DKMS enabled modules in RPMs.  It should
 be specified during both the
 .B add
@@ -370,27 +370,27 @@ scenarios when upgrading between various
 RPM package.  See the sample.spec file for an example or read more in the section
 below on Creating RPMs Which Utilize DKMS.
 .TP
-.B --spec specfile
+.B \-\-spec specfile
 This option is used by the
 .B mkkmp
 action to specify which RPM spec file to use when generating the KMP.
 .I specfile
 will be sought in the module source directory.
 .TP
-.B --dkmstree path/to/place
+.B \-\-dkmstree path/to/place
 Provides a destination tree for building and installing modules to.  Useful in
 cases that you don't want to contaminate a system when using solely for building.
 .TP
-.B --sourcetree path/to/place
+.B \-\-sourcetree path/to/place
 Provides a location to build a DKMS package from.  Useful for systems that you may
 not have root access, but would still like to be able to build DKMS packages.
 .TP
-.B --installtree path/to/place
+.B \-\-installtree path/to/place
 Provides a location to place modules when a
 .I dkms install
 command is issued.
 .TP
-.B --dkmsframework path/to/file
+.B \-\-dkmsframework path/to/file
 A supplemental configuration file to the systemwide dkms framework, typically located
 in /etc/dkms/framework.conf.  All option that are normally provided on a command line
 can be provided in this file.
@@ -433,11 +433,11 @@ how and where the module should be insta
 are required, providing as many as possible helps to limit any ambiguity.  Note
 that the
 .I dkms.conf
-is really only a shell-script of variable definitions which are then sourced in
+is really only a shell\-script of variable definitions which are then sourced in
 by the
 .B dkms
 executable (of the format, DIRECTIVE="directive text goes here").  As well, the
-directives are case-sensitive and should be given in
+directives are case\-sensitive and should be given in
 .B ALL CAPS.
 
 It is important to understand that many of the DKMS directives are arrays whose index
@@ -547,7 +547,7 @@ your module will be added as "scsi_hosta
 include:
 .B scsi_hostadapter
 ,
-.B sound-slot-
+.B sound\-slot\-
 and
 .B eth.
 Note that the numeric value of
@@ -558,7 +558,7 @@ and DEST_MODULE_LOCATION.  The index is 
 .B MODULES_CONF_OBSOLETES[#]=
 This directive array tells DKMS what modules.conf alias references are obsoleted by the
 module you are installing.  If your module obsoletes more than one module, this directive
-should be a comma-delimited list of those modules that are obsoleted (eg. for megaraid2,
+should be a comma\-delimited list of those modules that are obsoleted (eg. for megaraid2,
 MODULES_CONF_OBSOLETES[0]="megaraid,megaraid_2002"). When you are installing your module,
 DKMS ensures that any entries in
 .I /etc/modules.conf
@@ -568,12 +568,12 @@ are changed over to the new module name.
 your module, depending on the modules in your
 .I /lib/modules
 tree, DKMS will take different actions.
-If you kernel has an original_module, then modules.conf will not be touched and the non-obsolete
+If you kernel has an original_module, then modules.conf will not be touched and the non\-obsolete
 reference will remain.  If the kernel does not have an original_module but does have one
 of the obsolete modules, it will replace those references with the first obsolete module name in
-the comma-delimited list that is also in that kernel (thus, your obsolete list should be prioritized
+the comma\-delimited list that is also in that kernel (thus, your obsolete list should be prioritized
 from left to right).  If no original_module or obsolete modules are found within the kernel, the alias
-entry is removed all-together. Note that the numeric value of
+entry is removed all\-together. Note that the numeric value of
 .B #
 is tied to the index of BUILD_MODULE_NAME, BUILT_MODULE_LOCATION, DEST_MODULE_NAME
 and DEST_MODULE_LOCATION.  The index is also tied to MODULES_CONF_ALIAS_TYPE.
@@ -589,12 +589,12 @@ array directive.
 .TP
 .B STRIP[#]=
 By default strip is considered to be "yes".  If set to "no", DKMS will not
-run strip -g against your built module to remove debug symbols from it.
+run strip \-g against your built module to remove debug symbols from it.
 .TP
 .B PACKAGE_NAME=
 This directive is used to give the name associated with the entire package of modules.  This is the same
 name that is used with the
-.B -m
+.B \-m
 option when building, adding, etc. and may not necessarily be the same as the MODULE_NAME.  This
 directive must be present in every dkms.conf.
 .TP
@@ -630,7 +630,7 @@ implications of modifying
 .B OBSOLETE_BY=
 This directive allows you to specify a kernel version that obsoletes the necessity for this
 particular DKMS module.  This can be specified as a particular upstream kernel or an ABI
-bump of a kernel.  For example, "2.6.24" would be an upstream kernel and "2.6.24-16" would
+bump of a kernel.  For example, "2.6.24" would be an upstream kernel and "2.6.24\-16" would
 represent an ABI bump for a kernel.  Both are valid in this area.
 
 Please avoid the use of
@@ -651,8 +651,8 @@ If you feel you must use it, please use 
 
  ubuntu_804="Ubuntu
  8.04"
- if [ -x /usr/bin/lsb_release ]; then
-   if [ "$(/usr/bin/lsb_release -sir)" == "${ubuntu_804}" ]; then
+ if [ \-x /usr/bin/lsb_release ]; then
+   if [ "$(/usr/bin/lsb_release \-sir)" == "${ubuntu_804}" ]; then
      OBSOLETE_BY="2.6.25"
    fi
  fi
@@ -660,13 +660,13 @@ If you feel you must use it, please use 
 .TP
 .B PATCH[#]=
 Use the PATCH directive array to specify patches which should be applied to your source before a build occurs.
-All patches are expected to be in -p1 format and are applied with the patch -p1 command.
+All patches are expected to be in \-p1 format and are applied with the patch \-p1 command.
 Each directive should specify the filename of the patch to apply, and all patches must
 be located in the patches subdirectory of your source directory (
-.I /usr/src/<module>-<module-version>/patches/
+.I /usr/src/<module>\-<module\-version>/patches/
 ).  If any patch fails to apply, the build will be halted and the rejections can be
 inspected in
-.I /var/lib/dkms/<module>/<module-version>/build/.
+.I /var/lib/dkms/<module>/<module\-version>/build/.
 If a PATCH should only be applied conditionally, the
 .B PATCH_MATCH[#]
 array should be used, and a corresponding regular expression should be placed in
@@ -737,14 +737,14 @@ is performed. The path should be given r
 The name of the script to be run before an
 .B install
 is performed. The path should be given relative to the root directory
-of your source.  If the script exits with a non-zero value, the
+of your source.  If the script exits with a non\-zero value, the
 install will be aborted.  This is typically used to perform a custom
 version comparison.
 .TP
 .SH DKMS.CONF VARIABLES
 Within your
 .I dkms.conf
-file, you can use certain variables which will be replaced at run-time with their
+file, you can use certain variables which will be replaced at run\-time with their
 values.
 .TP
 .B $kernelver
@@ -757,14 +757,14 @@ module (eg. MAKE="make all INCLUDEDIR=/l
 See the section on /etc/dkms/framework.conf for more information.  This variable represents
 the location of the DKMS tree on the local system.  By default this is
 .I /var/lib/dkms
-, but this value should not be hard-coded into a dkms.conf in the event that the local user
+, but this value should not be hard\-coded into a dkms.conf in the event that the local user
 has changed it on their system.
 .TP
 .B $source_tree
 See the section on /etc/dkms/framework.conf for more information.  This variable represents
 the location where DKMS keeps source on the local system.  By default this is
 .I /usr/src
-, but this value should not be hard-coded into a dkms.conf in the event that the local user
+, but this value should not be hard\-coded into a dkms.conf in the event that the local user
 has changed it on their system.
 .TP
 .B $kernel_source_dir
@@ -772,7 +772,7 @@ This variable holds the value of the loc
 will be
 .I /lib/modules/$kernelver/build
 , unless otherwise specified with the
-.B --kernelsourcedir
+.B \-\-kernelsourcedir
 option.
 .SH /etc/dkms/framework.conf
 This configuration file controls how the overall DKMS framework handles.  It is sourced
@@ -784,10 +784,10 @@ default values for the variables.
 and
 .B $install_tree
 which control where DKMS looks for its framework.  Note that these variables can also
-be manipulated on the command line with --dkmstree, --sourcetree
-and --installtree options.
+be manipulated on the command line with \-\-dkmstree, \-\-sourcetree
+and \-\-installtree options.
 .SH dkms_autoinstaller
-This boot-time service automatically installs any module which has
+This boot\-time service automatically installs any module which has
 .B AUTOINSTALL="yes"
 set in its
 .B dkms.conf
@@ -868,8 +868,8 @@ file packaged with
 as an example for what your RPM spec file might look like.
 Creating RPMs which utilize
 .B dkms
-is a fairly straight-forward process.  The RPM need only to install the source into
-.I /usr/src/<module>-<module-version>/
+is a fairly straight\-forward process.  The RPM need only to install the source into
+.I /usr/src/<module>\-<module\-version>/
 and then employ
 .B dkms
 itself to do all the work of installation.  As such, the RPM should first untar the source into
@@ -877,29 +877,28 @@ this directory.  From here, within the R
 .I .spec
 file, a
 .B dkms add
-should be called (remember to use the --rpm_safe_upgrade flag during the add) followed by a
+should be called (remember to use the \-\-rpm_safe_upgrade flag during the add) followed by a
 .B dkms build
 followed by a
 .B dkms install.
 Your
 .I dkms.conf
 file should be placed within the
-.I /usr/src/<module>-<module-version>/
+.I /usr/src/<module>\-<module\-version>/
 directory.
 
 Under the removal parts of the
 .I .spec
-file, all that needs to be called is a: dkms remove -m <module> -v <module-version> --all --rpm_safe_upgrade.
-
+file, all that needs to be called is a: dkms remove \-m <module> \-v <module\-version> \-\-all \-\-rpm_safe_upgrade.
 Use of the
-.B --rpm_safe_upgrade
+.B \-\-rpm_safe_upgrade
 flag is imperative for making sure DKMS and RPM play nicely together in all scenarios of using
-the -Uvh flag with RPM to upgrade dkms enabled packages.  It will only function if used during
+the \-Uvh flag with RPM to upgrade dkms enabled packages.  It will only function if used during
 both the add
 .B and
 remove actions within the same RPM spec file. Its use makes sure that when upgrading between different
-releases of an RPM for the same <module-version>, DKMS does not do anything dumb (eg. it ensures
-a smooth upgrade from megaraid-2.09-5.noarch.rpm to megaraid-2.09-6.noarch.rpm).
+releases of an RPM for the same <module\-version>, DKMS does not do anything dumb (eg. it ensures
+a smooth upgrade from megaraid\-2.09-5.noarch.rpm to megaraid\-2.09\-6.noarch.rpm).
 
 It should be noted that a binary RPM which contains source is not a traditional practice.
 However, given the benefits of
@@ -911,29 +910,29 @@ is not architecture specific,
 should be specified in the
 .I .spec
 file to indicate that the package can work regardless of the system architecture.  Also
-note that DKMS RPM upgrades (-U option) will automatically work because of the structure
+note that DKMS RPM upgrades (\-U option) will automatically work because of the structure
 of the
 .B dkms
 tree.
 
 Lastly, as a matter of convention, you should name your RPM:
-<package>-<version>-<rpm-version>dkms.noarch.rpm.  The word
+<package>\-<version>\-<rpm\-version>dkms.noarch.rpm.  The word
 .B dkms
-as part of the rpm-version signifies that the RPM
+as part of the rpm\-version signifies that the RPM
 works within the DKMS framework.
 .SH AUTHOR
 Gary Lerhaupt
 .SH WEBPAGE
 .I http://linux.dell.com/dkms
-.SH WHITE-PAPERS
-.I http://linux.dell.com/dkms/dkms-ols2004.pdf
+.SH WHITE\-PAPERS
+.I http://linux.dell.com/dkms/dkms\-ols2004.pdf
 
-.I http://www.dell.com/downloads/global/power/1q04-ler.pdf
+.I http://www.dell.com/downloads/global/power/1q04\-ler.pdf
 
 .I http://www.linuxjournal.com/article.php?sid=6896
-.SH MAILING-LIST
-dkms-devel@dell.com
-.I http://lists.us.dell.com/mailman/listinfo/dkms-devel
+.SH MAILING\-LIST
+dkms\-devel@dell.com
+.I http://lists.us.dell.com/mailman/listinfo/dkms\-devel
 .SH REFERENCES
 Kernel Module Packages
 .I http://kerneldrivers.org

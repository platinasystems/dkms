From: Dirk Griesbach <spamthis@freenet.de>
Date: Wed, 6 Jul 2016 05:27:08 +0800
Subject: Port apport hook to python3

---
 dkms_apport.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/dkms_apport.py b/dkms_apport.py
index c359486..08581c5 100755
--- a/dkms_apport.py
+++ b/dkms_apport.py
@@ -36,12 +36,12 @@ optparser.add_option('-k', help="Specify the kernel version",
 options=optparser.parse_args()[0]
 
 if not options.module or not options.version:
-    print >> sys.stderr, 'ERROR (dkms apport): both -m and -v are required'
+    print('ERROR (dkms apport): both -m and -v are required', file=sys.stderr)
     sys.exit(2)
 
 package=packaging.get_file_package('/usr/src/' + options.module + '-' + options.version)
 if package is None:
-    print >> sys.stderr, 'ERROR (dkms apport): binary package for %s: %s not found' % (options.module,options.version)
+    print('ERROR (dkms apport): binary package for %s: %s not found' % (options.module,options.version), file=sys.stderr)
     sys.exit(1)
 
 if options.kernel:
@@ -50,9 +50,9 @@ if options.kernel:
 
     try:
         apport.packaging.is_distro_package(kernel_package)
-    except ValueError, e:
+    except ValueError as e:
         if e == 'package does not exist':
-            print >> sys.stderr, 'ERROR (dkms apport): kernel package %s is not supported' % (kernel_package)
+            print('ERROR (dkms apport): kernel package %s is not supported' % (kernel_package), file=sys.stderr)
             sys.exit(1)
 
 make_log=os.path.join('/var','lib','dkms',options.module,options.version,'build','make.log')
@@ -62,7 +62,7 @@ report['Package'] = package
 try:
     report['SourcePackage'] = apport.packaging.get_source(package)
 except ValueError:
-    print >> sys.stderr, 'ERROR (dkms apport): unable to determine source package for %s' % package
+    print('ERROR (dkms apport): unable to determine source package for %s' % package, file=sys.stderr)
     sys.exit(3)
 try:
     version = packaging.get_version(package)
@@ -81,7 +81,7 @@ attach_file_if_exists(report, make_log, 'DKMSBuildLog')
 if 'DKMSBuildLog' in report:
     this_year = str(datetime.today().year)
     if 'Segmentation fault' in report['DKMSBuildLog']:
-        print >> sys.stderr, 'ERROR (dkms apport): There was a segmentation fault when trying to build the module'
+        print('ERROR (dkms apport): There was a segmentation fault when trying to build the module', file=sys.stderr)
         sys.exit(1)
     dupe_sig = ''
     for line in report['DKMSBuildLog'].split('\n'):
